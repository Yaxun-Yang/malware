import pandas as pd
import time
import math
import numpy as np


def data_read():
    data = pd.read_csv("base_data/dwd_yunsec_aegis_file_vis_base_info.csv", usecols=[4, 5, 6, 7])
    data = data.to_numpy()
    return data


def trans_to_timestamp(data):

    for i in range(len(data)):
        for j in range(len(data[i])):
            if isinstance(data[i][j], str) or not math.isnan(data[i][j]):
                data[i][j] = int(time.mktime(time.strptime(data[i][j], "%Y-%m-%d %H:%M:%S")))
            else:
                data[i][j] = -1
    return data


def get_interval(data):
    interval_data = [[data[i][0]-data[i][2], data[i][1]-data[i][2],
                      data[i][1]-data[i][0], data[i][3]-data[i][2]if data[i][3] != -1 else -1]for i in range(len(data))]
    interval_data = np.array(interval_data)
    return interval_data


def normalization(data):
    mmax = np.max(data)
    mmin = np.min(data[data != -1])
    if mmax != mmin:
        for i in range(len(data)):
            if data[i] > 0:
                data[i] = (data[i] - mmin) / (mmax - mmin)
    return data


def data_write(data, interval_data):
    df = pd.DataFrame({"first_time": data[0], "last_time": data[1],
                       "create_time": data[2], "modified_time": data[3],
                       "first_create": interval_data[0], "last_create": interval_data[1],
                       "last_first": interval_data[2], "modified_create": interval_data[3]})
    df.to_csv("processed_data/time_feature.csv", mode='w', sep=',', index=False)


def main():
    data = data_read()
    data = trans_to_timestamp(data)
    interval_data = get_interval(data).transpose()
    data = data.transpose()

    for i in range(4):
        data[i] = normalization(data[i])

    data_write(data, interval_data)

    # print(interval_data)


if __name__ == '__main__':
    main()
